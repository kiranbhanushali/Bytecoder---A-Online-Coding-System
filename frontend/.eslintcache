[{"/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/index.js":"1","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/reportWebVitals.js":"2","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/store.js":"3","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/App.js":"4","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/reducers/index.js":"5","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/screens/AddProblem.js":"6","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/screens/ProblemsDetails.js":"7","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/components/Header.js":"8","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/screens/Run.js":"9","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/screens/Home.js":"10","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/screens/Login.js":"11","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/screens/Problems.js":"12","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/screens/Submit.js":"13","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/screens/Temp.js":"14","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/screens/Register.js":"15","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/screens/Profile.js":"16","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/reducers/problems.js":"17","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/reducers/auth.js":"18","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/reducers/submit.js":"19","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/components/Markdown.js":"20","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/components/Codemirror.js":"21","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/components/UseForm.js":"22","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/components/Spinner.js":"23","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/components/ProblemsTable.js":"24","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/actions/login.js":"25","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/actions/generic.js":"26","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/actions/loginAction.js":"27","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/actions/addProblemAction.js":"28","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/api/problems.js":"29","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/actions/submitAction.js":"30","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/actions/registerAction.js":"31","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/actions/fetchProblems.js":"32","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/functions/AddProblem.js":"33","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/actions/problems.js":"34","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/actions/register.js":"35","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/actions/submit.js":"36","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/functions/Run.js":"37","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/functions/auth.js":"38","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/api/index.js":"39","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/base.js":"40","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/actions/profileAction.js":"41","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/actions/profile.js":"42"},{"size":611,"mtime":1611034773639,"results":"43","hashOfConfig":"44"},{"size":362,"mtime":1611034773639,"results":"45","hashOfConfig":"44"},{"size":1032,"mtime":1611034773639,"results":"46","hashOfConfig":"44"},{"size":1352,"mtime":1611034773635,"results":"47","hashOfConfig":"44"},{"size":267,"mtime":1611034773639,"results":"48","hashOfConfig":"44"},{"size":5411,"mtime":1611124327275,"results":"49","hashOfConfig":"44"},{"size":1677,"mtime":1611124712928,"results":"50","hashOfConfig":"44"},{"size":2043,"mtime":1611137163572,"results":"51","hashOfConfig":"44"},{"size":2550,"mtime":1611125807799,"results":"52","hashOfConfig":"44"},{"size":5123,"mtime":1611124343147,"results":"53","hashOfConfig":"44"},{"size":5243,"mtime":1611138809544,"results":"54","hashOfConfig":"44"},{"size":891,"mtime":1611124626960,"results":"55","hashOfConfig":"44"},{"size":2684,"mtime":1611126056500,"results":"56","hashOfConfig":"44"},{"size":2298,"mtime":1611034773639,"results":"57","hashOfConfig":"44"},{"size":8002,"mtime":1611138851091,"results":"58","hashOfConfig":"44"},{"size":3715,"mtime":1611297550612,"results":"59","hashOfConfig":"44"},{"size":712,"mtime":1611034773639,"results":"60","hashOfConfig":"44"},{"size":3108,"mtime":1611298177285,"results":"61","hashOfConfig":"44"},{"size":909,"mtime":1611034773639,"results":"62","hashOfConfig":"44"},{"size":220,"mtime":1611034773635,"results":"63","hashOfConfig":"44"},{"size":1502,"mtime":1611034773635,"results":"64","hashOfConfig":"44"},{"size":1113,"mtime":1611034773635,"results":"65","hashOfConfig":"44"},{"size":456,"mtime":1611034773635,"results":"66","hashOfConfig":"44"},{"size":2988,"mtime":1611139458389,"results":"67","hashOfConfig":"44"},{"size":537,"mtime":1611034773635,"results":"68","hashOfConfig":"44"},{"size":90,"mtime":1611034773635,"results":"69","hashOfConfig":"44"},{"size":677,"mtime":1611119194293,"results":"70","hashOfConfig":"44"},{"size":291,"mtime":1611034773635,"results":"71","hashOfConfig":"44"},{"size":182,"mtime":1611034773635,"results":"72","hashOfConfig":"44"},{"size":586,"mtime":1611034773635,"results":"73","hashOfConfig":"44"},{"size":632,"mtime":1611034773635,"results":"74","hashOfConfig":"44"},{"size":634,"mtime":1611034773635,"results":"75","hashOfConfig":"44"},{"size":329,"mtime":1611034773639,"results":"76","hashOfConfig":"44"},{"size":365,"mtime":1611034773635,"results":"77","hashOfConfig":"44"},{"size":453,"mtime":1611034773635,"results":"78","hashOfConfig":"44"},{"size":402,"mtime":1611034773635,"results":"79","hashOfConfig":"44"},{"size":614,"mtime":1611034773639,"results":"80","hashOfConfig":"44"},{"size":955,"mtime":1611121848679,"results":"81","hashOfConfig":"44"},{"size":191,"mtime":1611034773635,"results":"82","hashOfConfig":"44"},{"size":558,"mtime":1611290376940,"results":"83","hashOfConfig":"44"},{"size":562,"mtime":1611298039743,"results":"84","hashOfConfig":"44"},{"size":346,"mtime":1611297165293,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"97lam0",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"88"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"88"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/index.js",[],["192","193"],"/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/reportWebVitals.js",[],"/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/store.js",[],"/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/App.js",["194","195"],"import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport ProblemsDetails from \"./screens/ProblemsDetails\";\nimport AddProblem from \"./screens/AddProblem\";\nimport Home from \"./screens/Home\";\nimport Login from \"./screens/Login\";\nimport Run from \"./screens/Run\";\nimport Problems from \"./screens/Problems\";\nimport Profile from \"./screens/Profile\";\nimport Register from \"./screens/Register\";\nimport Submit from \"./screens/Submit\";\nimport Temp from \"./screens/Temp\";\nfunction App() {\n  return (\n    <BrowserRouter>\n      <React.Fragment>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/problems\" exact component={Problems} />\n          <Route exact path=\"/problem/:id\" component={ProblemsDetails} />\n          <Route exact path=\"/profile\" component={Profile} />\n          <Route exact path=\"/submit\" component={Submit} />\n          <Route exact path=\"/addproblem\" component={AddProblem} />\n          <Route exact path=\"/dev\" component={Temp} />\n        </Switch>\n      </React.Fragment>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/reducers/index.js",[],"/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/screens/AddProblem.js",["196"],"import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addProblemF } from '../actions/addProblemAction'\nimport \"./theme.css\"\nexport default function AddProblem() {\n    const dispatch = useDispatch();\n    const [newProblem, setNewProblem] = useState({\n        title: \"\",\n        code: \"\",\n        category: [],\n        tmpCategory: \"\",\n        statement: \"\",\n        input: [],\n        output: [],\n    });\n\n    const handleInputChange = (event) => {\n        if (event.target.name === \"addCategory\") {\n            if (newProblem.tmpCategory === \"\") {\n            } else {\n                setNewProblem((prevState) => ({\n                    ...prevState,\n                    category: [...prevState.category, prevState.tmpCategory],\n                    tmpCategory: \"\",\n                }));\n            }\n        } else if (event.target.name === \"addTestCase\") {\n            if (newProblem.tempInput === \"\" || newProblem.tempOutput === \"\") {\n            } else {\n                setNewProblem((prevState) => ({\n                    ...prevState,\n                    input: [...prevState.input, prevState.tempInput],\n                    output: [...prevState.output, prevState.tempOutput],\n                    tempOutput: \"\",\n                    tempInput: \"\",\n                }));\n            }\n        } else\n            setNewProblem({\n                ...newProblem,\n                [event.target.name]: event.target.value,\n            });\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        addProblemF(newProblem);\n    };\n\n    return (\n        <div class=\"mycontainer\">\n            <h2 class=\"text-center\">Add Problem</h2>\n            <form onSubmit={handleSubmit}>\n                <div class=\"form-group\">\n                    <label for=\"email\">Problem Title:</label>\n                    <input\n                        type=\"title\"\n                        required\n                        class=\"form-control\"\n                        id=\"title\"\n                        placeholder=\"Title\"\n                        onChange={handleInputChange}\n                        value={newProblem.title}\n                        name=\"title\"\n                    />\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"email\">Problem Code:</label>\n                    <input\n                        type=\"code\"\n                        class=\"form-control\"\n                        required\n                        id=\"code\"\n                        placeholder=\"Enter code\"\n                        onChange={handleInputChange}\n                        value={newProblem.code}\n                        name=\"code\"\n                    />\n                </div>\n                <div id=\"chk_option_error\">\n                    Please select at least one category.\n                    <div>\n                        <input\n                            name=\"tmpCategory\"\n                            type=\"text\"\n                            class=\"form-control\"\n                            value={newProblem.tmpCategory}\n                            onChange={handleInputChange}\n                        />\n                        <button\n                            class=\"form-control\"\n                            name=\"addCategory\"\n                            onClick={(event) => {\n                                handleInputChange(event);\n                            }}\n                        >\n                            Add\n                        </button>\n                    </div>\n                    <div>\n                        <ul>\n                            {newProblem.category.map((category) => {\n                                return <li>{category} </li>;\n                            })}\n                        </ul>\n                    </div>\n                </div>\n\n                <label for=\"comment\">Statement:</label>\n                <textarea\n                    name=\"statement\"\n                    required\n                    onChange={handleInputChange}\n                    value={newProblem.statement}\n                    class=\"form-control\"\n                    rows=\"5\"\n                    id=\"comment\"\n                ></textarea>\n                <label for=\"tempInput\">Input:</label>\n                <textarea\n                    name=\"tempInput\"\n                    onChange={handleInputChange}\n                    value={newProblem.tempInput}\n                    class=\"form-control\"\n                    rows=\"5\"\n                    id=\"input\"\n                ></textarea>\n                <label for=\"tempOutput\">OUTPUT</label>\n                <textarea\n                    name=\"tempOutput\"\n                    onChange={handleInputChange}\n                    value={newProblem.tempOutput}\n                    class=\"form-control\"\n                    rows=\"5\"\n                    id=\"output\"\n                ></textarea>\n                <button\n                    class=\"form-control\"\n                    name=\"addTestCase\"\n                    onClick={(event) => {\n                        handleInputChange(event);\n                    }}\n                >\n                    Add New Testcase\n                </button>\n\n                <button type=\"submit\" class=\"btn btn-default\">\n                    Submit\n                </button>\n            </form>\n        </div>\n    );\n}\n\n","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/screens/ProblemsDetails.js",["197","198","199","200"],"import React, { Component } from \"react\";\nimport PROBLEMAPI from \"../api/problems\";\nimport axios from \"axios\";\nimport Markdown from \"../components/Markdown\";\nimport ReactMarkdown from \"react-markdown\";\nimport { useSelector } from \"react-redux\";\nimport \"./theme.css\"\n\nconst ProblemsDetails = (props) => {\n  const problem_code = props.match.params.id;\n  const problem = useSelector((state) => state.problems.problems_list).find(\n    (p) => p.code === problem_code\n  );\n  console.log(problem);\n  const submitProblem = () => {\n    // redirect to the submit page\n    props.history.push(\"/submit?problemCode=\" + problem.code);\n  };\n  return (\n    // <div>\n    // <h1>{problem[0] &&  problem[0].title}</h1>\n    // { problem[0] && <Markdown markdown = {problem[0].markdown }/> }\n    // </div>\n    <div className=\"mycontainer\">\n      <div class=\"container-fluid\">\n        <div class=\"align-center my-4 text-center\">\n          <div>\n            <h1>{problem && problem.title}</h1>\n\n            <div class=\" justify-content-end \">\n              <button onClick={() => submitProblem()}> Submit</button>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"align-center text-center \">\n          <h5> Time Limit 2s . Mem Limit 256 MB</h5>\n        </div>\n\n        <div class=\"align-left my-4\">\n          {problem && <Markdown markdown={problem.markdown} />}\n        </div>\n\n        <div class=\"align-left my-4\">\n          {problem && <Markdown markdown={problem.input[0]} />}\n        </div>\n        <div class=\"align-left my-4\">\n          {problem && <Markdown markdown={problem.output[0]} />}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default ProblemsDetails;\n","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/components/Header.js",["201","202","203","204"],"import React, { useState } from \"react\";\nimport logo from \"../assets/bytecode-logo.png\";\nimport { Redirect } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../actions/login\";\nimport { Link } from 'react-router-dom';\nimport './Header.css'\n\nconst Authhandle = () => {\n  const isLogged = useSelector((state) => state.auth.isLoggedIn);\n  const dispatch = useDispatch();\n  const onClickLogout = () => {\n    localStorage.removeItem(\"token\");\n    dispatch(logout());\n  };\n  \n  if (isLogged) {\n    return (\n      <div className=\"header_nav\">\n        <div className=\"header_option\">\n          <a onClick={onClickLogout} className=\"btn btn-outline-dark\">\n            {\" \"}\n      Logout{\" \"}\n          </a>\n        </div>\n      </div>\n      \n    );\n  } else {\n    return (\n      <div className=\"header_nav\">\n        <div className=\"header_option\">\n          <a href=\"/login\" className=\"btn btn-outline-dark\">\n            {\" \"}\n            Login{\" \"}\n          </a>\n        </div>\n        <div className=\"header_option\">\n          <a href=\"/register\" className=\"btn btn-outline-dark\">\n            {\" \"}\n            Register{\" \"}\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <Link to=\"/\">\n        <img className=\"header_logo\" src={logo} />\n      </Link>\n      <div className=\"header_nav\">\n        <div className=\"header_option\">\n          <a href=\"/problems\" className=\"btn btn-outline-dark\">\n            {\" \"}\n                Problems{\" \"}\n          </a>\n        </div>\n        <div className=\"header_option\">\n          <a href=\"/submit\" className=\"btn btn-outline-dark\">\n            {\" \"}\n                Code Compile Run{\" \"}\n          </a>\n\n        </div>\n        <div className=\"header_option\">\n          <a href=\"/profile\" className=\"btn btn-outline-dark\">\n            {\" \"}\n                Profile{\" \"}\n          </a>\n        </div>\n        {Authhandle()}\n      </div>\n    </div>\n\n  );\n};\n\nexport default Header;\n","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/screens/Run.js",["205","206"],"import \"codemirror/keymap/sublime\";\nimport \"codemirror/theme/monokai.css\";\nimport Codemirror from \"../components/Codemirror\";\nimport React, { useState } from \"react\";\nimport \"./theme.css\"\n\nimport UseForm from \"../components/UseForm\";\nvar api = {\n    run: \"http://localhost:5000/api/v1/run\",\n};\nfunction Run(props) {\n    // for mode of editor\n    const [selectedOption, setSelectedOption] = useState(\"c\");\n    const { inputs, handleInputChange, handleSubmit } = UseForm({\n        myfile: \"\",\n        code: \"\",\n        type: \"RUN\"\n    });\n    const [code, setCode] = useState(\"//write code here \");\n    const loadComponent = () => {\n        if (\n            props.history.location.state &&\n            props.history.location.state.problem\n        ) {\n            var problem = props.history.location.state.problem;\n            return <h1> Submit Problem : {problem[0].code}</h1>;\n        } else {\n            return <h1> Code, Compile & Run </h1>;\n        }\n    };\n    return (\n        <div className=\"mycontainer\">\n            <form onSubmit={handleSubmit}>\n                <div>\n                    {loadComponent()}\n\n                    <div>\n                        <select\n                            id=\"mode\"\n                            value={selectedOption}\n                            onChange={(e) => setSelectedOption(e.target.value)}\n                        >\n                            <option value=\"c\">C</option>\n                            <option value=\"cpp\">C++ </option>\n                            <option value=\"python\">Python</option>\n                        </select>\n                        <Codemirror\n                            code={code}\n                            setCode={setCode}\n                            mode={selectedOption}\n                            onChange={handleInputChange}\n                        />\n                    </div>\n                </div>\n                <div>\n                    <div class=\"d-flex justify-content-center m-4\">\n                        <label for=\"myfile\">Or Select a file:</label>\n                        <input\n                            type=\"file\"\n                            id=\"myfile\"\n                            name=\"myfile\"\n                            onChange={handleInputChange}\n                        />\n                    </div>\n\n                    <div class=\"d-flex justify-content-center\">\n                        <button>Submit</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n\n    );\n}\n\nexport default Run;\n","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/screens/Home.js",[],"/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/screens/Login.js",["207","208"],"import React, { useState } from 'react'\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport TextField from '@material-ui/core/TextField'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Link from '@material-ui/core/Link'\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport { loginF } from '../actions/loginAction'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { clearAuthError } from '../actions/generic'\nimport \"./theme.css\"\nimport \"./log.css\"\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}))\n\nexport default function Login() {\n    let history = useHistory()\n    const dispatch = useDispatch()\n    const classes = useStyles()\n    const [user, setUser] = useState({ username: '', password: '' })\n    const handleInputChange = (event) => {\n        setUser({ ...user, [event.target.name]: event.target.value })\n    }\n\n    const auth = useSelector((state) => state.auth)\n    const handleSubmit = async (event) => {\n        event.preventDefault()\n        await loginF(dispatch, user)\n        console.log('handleSubmit', auth)\n        if (auth.isLoggedIn) history.push('/')\n    }\n    const error_message = auth?.error?.login\n    return (\n        <div className=\"mycontainer\">\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <div className=\"logst\">\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign in\n                </Typography>\n                    <div>\n                        {error_message && (\n                            <div class=\"alert alert-danger\" role=\"alert\">\n                                {error_message}\n                                <button\n                                    type=\"button\"\n                                    class=\"close\"\n                                    data-dismiss=\"alert\"\n                                    aria-label=\"Close\"\n                                    onClick={() => dispatch(clearAuthError())}\n                                >\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                        )}\n                    </div>\n                    <form className={classes.form} onSubmit={handleSubmit}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"username\"\n                            label=\"Username\"\n                            name=\"username\"\n                            onChange={handleInputChange}\n                            value={user.username}\n                            autoFocus\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            onChange={handleInputChange}\n                            value={user.password}\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                        />\n\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Sign In\n                    </Button>\n                        <Grid container>\n                            <Grid item>\n                                <Link href=\"/register\" variant=\"body2\">\n                                    {\"Don't have an account? Sign Up\"}\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n                <Box mt={8}>\n                    <login />\n                </Box>\n            </Container>\n        </div>\n    )\n}\n","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/screens/Problems.js",["209","210","211"],"import React, { Component } from \"react\";\nimport PROBLEMAPI from \"../api/problems\";\nimport axios from \"axios\";\nimport Spinner from \"../components/Spinner\";\nimport ProblemsTable from \"../components/ProblemsTable\";\nimport fetchProblems from \"../actions/fetchProblems\";\nimport \"./theme.css\"\n\nimport { useDispatch, useSelector } from \"react-redux\";\nconst Problems = (props) => {\n  const dispatch = useDispatch();\n  const problems_pending = useSelector((state) => state.problems.pending);\n\n  const problems_loaded = useSelector((state) => state.problems.loaded);\n  function loadcompo() {\n    if (!problems_loaded) {\n      fetchProblems(dispatch);\n      return <Spinner />;\n    } else if (problems_pending) {\n      return <Spinner />;\n    } else {\n      return <ProblemsTable />;\n    }\n  }\n  return (<div className=\"mycontainer\">\n    {\n      loadcompo()\n    }</div>)\n\n};\n\nexport default Problems;\n","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/screens/Submit.js",["212","213"],"import React, { Component, useState } from \"react\";\nimport Codemirror from \"../components/Codemirror\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { submitF } from \"../actions/submitAction\";\nimport \"./theme.css\"\n\nfunction Submit(props) {\n  const [content, setContent] = useState({\n    code: \"\",\n    language: \"C\",\n    problem_code: \"\",\n  });\n  const dispatch = useDispatch();\n  const handleInputChange = (event) => {\n    setContent((prevState) => ({\n      ...prevState,\n      [event.target.name]: event.target.value,\n    }));\n  };\n  const loadComponent = () => {\n    console.log(props.history);\n    if (props.history.location.search) {\n      if (content.problem_code === \"\") {\n        var problem_code = props.history.location.search.split(\"=\")[1];\n        setContent({\n          ...content,\n          problem_code,\n        });\n      }\n      return <h1> Submit Problem : {problem_code}</h1>;\n    } else {\n      return <h1> Code, Compile & Run </h1>;\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    submitF(dispatch, content);\n    console.log(\"submit page \");\n  };\n\n  return (\n    <div className=\"mycontainer\">\n      <div className=\"editor-form\">\n        <form onSubmit={handleSubmit}>\n          <div\n            className=\"editor \"\n            style={{\n              textAlign: \"left\",\n              margin: \"auto\",\n              width: \"70%\",\n              padding: 0,\n              marginTop: 0,\n            }}\n          >\n            {loadComponent()}\n            <div>\n              <h4>\n                {\" \"}\n              Choose Language\n              <select\n                  name=\"language\"\n                  value={content.language}\n                  onChange={handleInputChange}\n                >\n                  <option value=\"c\">C</option>\n                  <option value=\"cpp\">C++ </option>\n                  <option value=\"python\">Python</option>\n                </select>\n              </h4>\n              <Codemirror\n                content={content}\n                setContent={setContent}\n                onChange={handleInputChange}\n              />\n            </div>\n          </div>\n          <div>\n            <div class=\"d-flex justify-content-center m-4\">\n              <label for=\"myfile\">Or Select a file:</label>\n              <input\n                type=\"file\"\n                id=\"myfile\"\n                name=\"myfile\"\n                onChange={handleInputChange}\n              />\n            </div>\n\n            <div class=\"d-flex justify-content-center\">\n              <button>Submit</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\nexport default Submit;\n","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/screens/Temp.js",["214","215","216","217"],"import React, { Fragment, useState } from \"react\";\nimport axios from \"axios\";\n\nconst FileUpload = () => {\n    const [file, setFile] = useState(\"\");\n    const [filename, setFilename] = useState(\"Choose File\");\n    const [uploadedFile, setUploadedFile] = useState({});\n    const [message, setMessage] = useState(\"\");\n    const [uploadPercentage, setUploadPercentage] = useState(0);\n\n    const onChange = (e) => {\n        setFile(e.target.files[0]);\n        setFilename(e.target.files[0].name);\n    };\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append(\"file\", file);\n\n        try {\n            const res = await axios.post(\n                \"http://localhost:5000/api/v1/upload\",\n                formData,\n                {\n                    headers: {\n                        \"Content-Type\": \"multipart/form-data\",\n                    },\n                    onUploadProgress: (progressEvent) => {\n                        setUploadPercentage(\n                            parseInt(\n                                Math.round(\n                                    (progressEvent.loaded * 100) /\n                                        progressEvent.total\n                                )\n                            )\n                        );\n\n                        // Clear percentage\n                    },\n                }\n            );\n\n            const { fileName, filePath } = res.data;\n\n            setUploadedFile({ fileName, filePath });\n\n            setMessage(\"File Uploaded\");\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    return (\n        <form onSubmit={onSubmit}>\n            <div className=\"custom-file mb-4\">\n                <input\n                    type=\"file\"\n                    className=\"custom-file-input\"\n                    id=\"customFile\"\n                    onChange={onChange}\n                />\n                <label className=\"custom-file-label\" htmlFor=\"customFile\">\n                    {filename}\n                </label>\n            </div>\n\n            <input\n                type=\"submit\"\n                value=\"Upload\"\n                className=\"btn btn-primary btn-block mt-4\"\n            />\n        </form>\n    );\n};\n\nexport default FileUpload;\n","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/screens/Register.js",["218"],"import React, { useState } from 'react'\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport TextField from '@material-ui/core/TextField'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Link from '@material-ui/core/Link'\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { registerF } from '../actions/registerAction'\nimport { clearAuthError } from '../actions/generic'\nimport \"./theme.css\"\nimport \"./log.css\"\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}))\n\nexport default function Register() {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const [user, setUser] = useState({ username: '', password: '' })\n    const handleInputChange = (event) => {\n        setUser({ ...user, [event.target.name]: event.target.value })\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        // loginF(dispatch, user);\n        registerF(dispatch, user)\n        console.log('From Register User', user)\n    }\n\n    const auth = useSelector((state) => state.auth)\n    const error_message = auth.error ? auth.error.register : null\n    return (\n        <div className=\"mycontainer\">\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <div className=\"logst\">\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign up\n                </Typography>\n                    <div>\n                        {error_message && (\n                            <div class=\"alert alert-danger\" role=\"alert\">\n                                {error_message}\n                                <button\n                                    type=\"button\"\n                                    class=\"close\"\n                                    data-dismiss=\"alert\"\n                                    aria-label=\"Close\"\n                                    onClick={() => dispatch(clearAuthError())}\n                                >\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                        )}\n                    </div>\n\n                    <form className={classes.form} onSubmit={handleSubmit}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    autoComplete=\"fname\"\n                                    name=\"firstname\"\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"firstname\"\n                                    label=\"First Name\"\n                                    onChange={handleInputChange}\n                                    value={user.firstname}\n                                    autoFocus\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"lastname\"\n                                    label=\"Last Name\"\n                                    name=\"lastname\"\n                                    onChange={handleInputChange}\n                                    value={user.lastname}\n                                    autoComplete=\"lname\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"username\"\n                                    label=\"username \"\n                                    onChange={handleInputChange}\n                                    value={user.username}\n                                    name=\"username\"\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    onChange={handleInputChange}\n                                    value={user.email}\n                                    autoComplete=\"email\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    onChange={handleInputChange}\n                                    value={user.password}\n                                    autoComplete=\"current-password\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            value=\"allowExtraEmails\"\n                                            color=\"primary\"\n                                        />\n                                    }\n                                    label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                                />\n                            </Grid>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Sign Up\n                    </Button>\n                        <Grid container justify=\"flex-end\">\n                            <Grid item>\n                                <Link href=\"/login\" variant=\"body2\">\n                                    Already have an account? Sign in\n                            </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n\n            </Container>\n        </div>\n    )\n}\n","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/screens/Profile.js",["219"],"/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/reducers/problems.js",[],"/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/reducers/auth.js",[],"/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/reducers/submit.js",[],"/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/components/Markdown.js",["220"],"import React from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport {render} from 'react-dom'\n \n \nconst Markdown = ( props ) =>{\n\nreturn(<ReactMarkdown children={props.markdown} />)\n\n\n}\n\nexport default Markdown;\n","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/components/Codemirror.js",["221"],"import React, { useState } from \"react\";\n\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/addon/hint/show-hint\";\nimport \"codemirror/addon/hint/javascript-hint\";\nimport \"codemirror/addon/hint/show-hint.css\";\nimport \"codemirror/addon/hint/anyword-hint\";\nimport \"codemirror/keymap/sublime\";\nimport \"codemirror/addon/edit/closebrackets\";\nimport \"codemirror/addon/edit/closetag\";\nimport \"codemirror/addon/fold/foldcode\";\nimport \"codemirror/addon/fold/foldgutter\";\nimport \"codemirror/addon/fold/brace-fold\";\nimport \"codemirror/addon/fold/comment-fold\";\nimport \"codemirror/addon/fold/foldgutter.css\";\n\nfunction CodeEditor(props) {\n  const content = props.content;\n  const setContent = props.setContent;\n  return (\n    <CodeMirror\n      style={{ alignItems: \"left\", alignText: \"left\" }}\n      value={content.code}\n      options={{\n        mode: content.language,\n        theme: \"material\",\n        lineWrapping: true,\n        smartIndent: true,\n        lineNumbers: true,\n        autoCloseTags: true,\n        keyMap: \"sublime\",\n        matchBrackets: true,\n        autoCloseBrackets: true,\n        extraKeys: {\n          \"Ctrl-Space\": \"autocomplete\",\n        },\n      }}\n      onBeforeChange={(editor, data, value) => {\n        setContent({\n          ...content,\n          code: value,\n        });\n      }}\n    />\n  );\n}\n\nexport default CodeEditor;\n","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/components/UseForm.js",["222"],"import React,{useState} from 'react';\nimport {LoginF,RegisterF} from '../functions/auth'\nimport {RunF} from '../functions/Run'\nimport {AddProblemF} from '../functions/AddProblem'\nconst UseForm = (initialValues) => {\n    const [inputs,setInputs] = useState(initialValues);\n    const handleSubmit = (event) => {\n      if(event){\n        event.preventDefault();\n        if(inputs.type===\"LOGIN\"){\n            LoginF( inputs);\n        }else if( inputs.type===\"REGISTER\"){\n            RegisterF(inputs);\n        }else if( inputs.type===\"RUN\"){\n            RunF(inputs);\n        }else if( inputs.type===\"ADDPROBLEM\"){\n            AddProblemF(inputs);\n        }\n      }\n        console.log(\"From use form\")\n       console.log(inputs);\n    }\n    const handleInputChange = (event) => {\n      event.persist();\n      if( event.target.files && event.target.files[0] ) {\n          console.log( event.target.file)\n      }\n      setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}));\n      }\n    return {\n     inputs,setInputs,\n     handleInputChange,\n      handleSubmit\n      };\n}\nexport default UseForm;\n","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/components/Spinner.js",[],"/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/components/ProblemsTable.js",["223","224"],"import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport \"./pbtable.css\";\nexport default function ProblemsTable() {\n    const history = useHistory()\n    const query = history.location.search.split('=')[1] || null\n\n    const problems_list = useSelector((state) => {\n        if (query === null) {\n            return state.problems.problems_list\n        } else {\n            return state.problems.problems_list.filter((problem) =>\n                problem.category.includes(query)\n            )\n        }\n    })\n\n    const onProblemClick = (id) => {\n        history.push('/problem/' + id)\n    }\n    const onCategorieClick = (cat) => {\n        history.push('/problems?cat=' + cat)\n    }\n    return (\n        <div className=\"pbtable\">\n            <table class=\"table table-hover\" >\n                <thead>\n                    <tr>\n                        <th scope=\"col\">#</th>\n                        <th scope=\"col\">Title</th>\n                        <th scope=\"col\">Code</th>\n                        <th scope=\"col\">Category</th>\n                        <th scope=\"col\">Accuracy</th>\n                        <th scope=\"col\">Submissions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {problems_list.map((item, index) => {\n                        return (\n                            <tr>\n                                <th scope=\"row\">{index}</th>\n                                <td>\n                                    <a onClick={() => onProblemClick(item.code)}>\n                                        {item.title}\n                                    </a>\n                                </td>\n                                <td>\n                                    <a onClick={() => onProblemClick(item.code)}>\n                                        {item.code}\n                                    </a>\n                                </td>\n                                <td>\n                                    <div>\n                                        {item.category.map((cat) => {\n                                            return (\n                                                <li\n                                                    onClick={() =>\n                                                        onCategorieClick(cat)\n                                                    }\n                                                >\n                                                    {cat}\n                                                </li>\n                                            )\n                                        })}\n                                    </div>\n                                </td>\n                                <td>0</td>\n                                <td>0</td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/actions/login.js",[],"/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/actions/generic.js",[],"/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/actions/loginAction.js",["225","226"],"import api, { BASE_API_URL } from '../api'\nimport axios from 'axios'\n\nimport { loginRequest, loginSuccess, loginError, logout } from './login'\n\nexport function loginF(dispatch, data) {\n    dispatch(loginRequest())\n    api.post(BASE_API_URL + '/auth/login', data)\n        .then(function (response) {\n            console.log(response)\n            let token = response.data.token\n            localStorage.setItem('token', token)\n            dispatch(loginSuccess(token, response.data))\n        })\n        .catch(function (error) {\n            console.log('from erro')\n            console.log(error.response)\n            dispatch(loginError(error.response.data.msg))\n        })\n}\n\n","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/actions/addProblemAction.js",["227"],"import api, { BASE_API_URL } from \"../api\";\nimport axios from \"axios\";\n\nexport function addProblemF(data) {\n  api\n    .post(BASE_API_URL + \"/problem\", data)\n    .then(function (response) {\n      console.log(response);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/api/problems.js",[],"/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/actions/submitAction.js",["228","229"],"import api, { BASE_API_URL } from '../api'\nimport axios from 'axios'\n\nimport {\n    submitRequest,\n    submitSuccess,\n    submitResponse,\n    submitError,\n} from './submit'\n\nexport function submitF(dispatch, data) {\n    dispatch(submitRequest())\n    api.post(BASE_API_URL + '/submit', data)\n        .then(function (response) {\n            console.log(response)\n            alert(response.data.exe.stdout)\n            dispatch(submitResponse(response.data))\n        })\n        .catch(function (error) {\n            console.log(error)\n            dispatch(submitError(error))\n        })\n}\n","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/actions/registerAction.js",["230"],"import api, { BASE_API_URL } from '../api'\nimport axios from 'axios'\nimport { loginF } from './loginAction'\nimport { registerError, registerRequest, registerSuccess } from './register'\nexport function registerF(dispatch, data) {\n    dispatch(registerRequest())\n    axios\n        .post(BASE_API_URL + '/auth/register', data)\n        .then(function (response) {\n            console.log(response)\n            loginF(dispatch, data)\n            dispatch(registerSuccess(response.data))\n        })\n        .catch(function (error) {\n            console.log(error)\n            dispatch(registerError(error.response.data.msg))\n        })\n}\n","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/actions/fetchProblems.js",["231","232"],"import {\n  fetchProblemsSuccess,\n  fetchProblemsError,\n  fetchProblemsPending,\n} from \"./problems\";\n\nimport api, { BASE_API_URL } from \"../api\";\nimport axios from \"axios\";\nfunction fetchProblems(dispatch) {\n  dispatch(fetchProblemsPending());\n  axios\n    .get(\"http://localhost:5000/api/v1/problems\")\n    .then(function (response) {\n      dispatch(fetchProblemsSuccess(response.data));\n      return response;\n    })\n    .catch(function (error) {\n      // handle error\n      dispatch(fetchProblemsError(error));\n      console.log(error);\n    })\n    .then(function () {\n      // always executed\n    });\n}\n\nexport default fetchProblems;\n","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/functions/AddProblem.js",["233"],"import axios from \"axios\";\nimport API from \"../api\";\n\nexport const AddProblemF = (data) => {\n  axios\n    .post(\"http://localhost:5000/api/v1/problem\", data)\n    .catch(function (error) {\n      console.log(error);\n    })\n    .then(function (response) {\n      console.log(\"problem added \");\n      console.log(response);\n    });\n};\n","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/actions/problems.js",[],"/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/actions/register.js",[],"/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/actions/submit.js",[],"/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/functions/Run.js",["234"],"import axios from \"axios\";\nimport API from \"../api\";\n\nexport const RunF = (data) => {\n    console.log(data);\n    // const formData = new FormData();\n    // formData.append(\n    //    \"myFile\",\n    //     data.file,\n    //     data.file.name\n    //  );\n    axios.defaults.headers.common[\"authorization\"] = localStorage.getItem(\n        \"token\"\n    );\n    axios\n        .post(\"http://localhost:5000/api/v1/submit\", data)\n        .catch(function (error) {\n            console.log(error);\n        })\n        .then(function (response) {\n            console.log(\"her\");\n            console.log(response);\n        });\n};\n","/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/functions/auth.js",[],"/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/api/index.js",[],"/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/base.js",[],"/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/actions/profileAction.js",["235"],"/home/jacker0031/Documents/Bytecoder---A-Online-Coding-System/frontend/src/actions/profile.js",[],{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","severity":1,"message":"241","line":9,"column":8,"nodeType":"242","messageId":"243","endLine":9,"endColumn":11},{"ruleId":"244","severity":1,"message":"245","line":24,"column":41,"nodeType":"246","endLine":24,"endColumn":46},{"ruleId":"240","severity":1,"message":"247","line":6,"column":11,"nodeType":"242","messageId":"243","endLine":6,"endColumn":19},{"ruleId":"240","severity":1,"message":"248","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":26},{"ruleId":"240","severity":1,"message":"249","line":2,"column":8,"nodeType":"242","messageId":"243","endLine":2,"endColumn":18},{"ruleId":"240","severity":1,"message":"250","line":3,"column":8,"nodeType":"242","messageId":"243","endLine":3,"endColumn":13},{"ruleId":"240","severity":1,"message":"251","line":5,"column":8,"nodeType":"242","messageId":"243","endLine":5,"endColumn":21},{"ruleId":"240","severity":1,"message":"252","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":25},{"ruleId":"240","severity":1,"message":"253","line":3,"column":10,"nodeType":"242","messageId":"243","endLine":3,"endColumn":18},{"ruleId":"254","severity":1,"message":"255","line":21,"column":11,"nodeType":"256","endLine":21,"endColumn":71},{"ruleId":"257","severity":1,"message":"258","line":53,"column":9,"nodeType":"256","endLine":53,"endColumn":51},{"ruleId":"240","severity":1,"message":"259","line":8,"column":5,"nodeType":"242","messageId":"243","endLine":8,"endColumn":8},{"ruleId":"240","severity":1,"message":"260","line":14,"column":13,"nodeType":"242","messageId":"243","endLine":14,"endColumn":19},{"ruleId":"240","severity":1,"message":"261","line":6,"column":8,"nodeType":"242","messageId":"243","endLine":6,"endColumn":24},{"ruleId":"240","severity":1,"message":"262","line":7,"column":8,"nodeType":"242","messageId":"243","endLine":7,"endColumn":16},{"ruleId":"240","severity":1,"message":"248","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":26},{"ruleId":"240","severity":1,"message":"249","line":2,"column":8,"nodeType":"242","messageId":"243","endLine":2,"endColumn":18},{"ruleId":"240","severity":1,"message":"250","line":3,"column":8,"nodeType":"242","messageId":"243","endLine":3,"endColumn":13},{"ruleId":"240","severity":1,"message":"248","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":26},{"ruleId":"240","severity":1,"message":"263","line":3,"column":23,"nodeType":"242","messageId":"243","endLine":3,"endColumn":34},{"ruleId":"240","severity":1,"message":"264","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":25},{"ruleId":"240","severity":1,"message":"265","line":7,"column":12,"nodeType":"242","messageId":"243","endLine":7,"endColumn":24},{"ruleId":"240","severity":1,"message":"266","line":8,"column":12,"nodeType":"242","messageId":"243","endLine":8,"endColumn":19},{"ruleId":"240","severity":1,"message":"267","line":9,"column":12,"nodeType":"242","messageId":"243","endLine":9,"endColumn":28},{"ruleId":"240","severity":1,"message":"268","line":10,"column":8,"nodeType":"242","messageId":"243","endLine":10,"endColumn":11},{"ruleId":"240","severity":1,"message":"269","line":5,"column":10,"nodeType":"242","messageId":"243","endLine":5,"endColumn":17},{"ruleId":"240","severity":1,"message":"270","line":3,"column":9,"nodeType":"242","messageId":"243","endLine":3,"endColumn":15},{"ruleId":"240","severity":1,"message":"252","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":25},{"ruleId":"240","severity":1,"message":"271","line":1,"column":8,"nodeType":"242","messageId":"243","endLine":1,"endColumn":13},{"ruleId":"254","severity":1,"message":"255","line":44,"column":37,"nodeType":"256","endLine":44,"endColumn":82},{"ruleId":"254","severity":1,"message":"255","line":49,"column":37,"nodeType":"256","endLine":49,"endColumn":82},{"ruleId":"240","severity":1,"message":"250","line":2,"column":8,"nodeType":"242","messageId":"243","endLine":2,"endColumn":13},{"ruleId":"240","severity":1,"message":"272","line":4,"column":50,"nodeType":"242","messageId":"243","endLine":4,"endColumn":56},{"ruleId":"240","severity":1,"message":"250","line":2,"column":8,"nodeType":"242","messageId":"243","endLine":2,"endColumn":13},{"ruleId":"240","severity":1,"message":"250","line":2,"column":8,"nodeType":"242","messageId":"243","endLine":2,"endColumn":13},{"ruleId":"240","severity":1,"message":"273","line":6,"column":5,"nodeType":"242","messageId":"243","endLine":6,"endColumn":18},{"ruleId":"240","severity":1,"message":"274","line":1,"column":8,"nodeType":"242","messageId":"243","endLine":1,"endColumn":11},{"ruleId":"240","severity":1,"message":"274","line":7,"column":8,"nodeType":"242","messageId":"243","endLine":7,"endColumn":11},{"ruleId":"240","severity":1,"message":"275","line":7,"column":15,"nodeType":"242","messageId":"243","endLine":7,"endColumn":27},{"ruleId":"240","severity":1,"message":"276","line":2,"column":8,"nodeType":"242","messageId":"243","endLine":2,"endColumn":11},{"ruleId":"240","severity":1,"message":"276","line":2,"column":8,"nodeType":"242","messageId":"243","endLine":2,"endColumn":11},{"ruleId":"240","severity":1,"message":"277","line":3,"column":50,"nodeType":"242","messageId":"243","endLine":3,"endColumn":66},"no-native-reassign",["278"],"no-negated-in-lhs",["279"],"no-unused-vars","'Run' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'dispatch' is assigned a value but never used.","'Component' is defined but never used.","'PROBLEMAPI' is defined but never used.","'axios' is defined but never used.","'ReactMarkdown' is defined but never used.","'useState' is defined but never used.","'Redirect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'api' is assigned a value but never used.","'inputs' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'useSelector' is defined but never used.","'Fragment' is defined but never used.","'uploadedFile' is assigned a value but never used.","'message' is assigned a value but never used.","'uploadPercentage' is assigned a value but never used.","'Box' is defined but never used.","'storage' is defined but never used.","'render' is defined but never used.","'React' is defined but never used.","'logout' is defined but never used.","'submitSuccess' is defined but never used.","'api' is defined but never used.","'BASE_API_URL' is defined but never used.","'API' is defined but never used.","'uploadImageError' is defined but never used.","no-global-assign","no-unsafe-negation"]